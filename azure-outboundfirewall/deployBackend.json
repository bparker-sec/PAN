{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"baseUrl": {
			"type": "string",
			"metadata": {
				"description": "Base URL of templates and scripts"
			}
		},
		"storageName": {
			"type": "string",
			"metadata": {
				"description": "Storage account name"
			}
		},
		"avSetName": {
			"type": "string",
			"defaultValue": "backendAvSet",
			"metadata": {
				"description": "Availability Set name"
			}
		},
		// Vnet parameters
		"virtualNetworkName": {
			"type": "string",
			"metadata": {
				"description": "This is the name of the Virtual Network"
			}
		},
		"loadBalancerName": {
			"type": "string",
			"defaultValue": "outboundLB",
			"metadata": {
				"description": "This is the name of the inbound load balancer"
			}
		},
		"backendSubnetName": {
			"type": "string",
			"defaultValue": "backend",
			"metadata": {
				"description": "This is the name of the backend subnet"
			}
		},
		"frontendSubnetName": {
			"type": "string",
			"defaultValue": "frontend",
			"metadata": {
				"description": "This is the name of the frontend subnet"
			}
		},
		// VM parameters
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "Admin username"
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Admin password"
			}
		},
		"sshKey": {
			"type": "string",
			"metadata": {
				"description": "ssh public key for admin user authentication"
			}
		},
		"imagePublisher": {
			"type": "string",
			"defaultValue": "Canonical",
			"metadata": {
				"description": "Image Publisher"
			}
		},
		"imageOffer": {
			"type": "string",
			"defaultValue": "UbuntuServer",
			"metadata": {
				"description": "Image Offer"
			}
		},
		"imageSKU": {
			"type": "string",
			"defaultValue": "16.04.0-LTS",
			"metadata": {
				"description": "Image SKU"
			}
		},
		"vmNamePrefix": {
			"type": "string",
			"defaultValue": "backendWWW-",
			"metadata": {
				"description": "This is the prefix name for the virtual machines"
			}
		},
		"vmSize": {
			"type": "string",
			"allowedValues": [
				"Standard_A1",
				"Standard_D1",
				"Standard_D1_v2"
			],
			"defaultValue": "Standard_D1",
			"metadata": {
				"description": "This is the allowed list of VM sizes"
			}
		}
	},
	"variables": {
		"vnetId": "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
		"outboundLBId": "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName'))]",
		"frontendSubnetRef": "[concat(variables('vnetId'),'/subnets/',parameters ('frontendSubnetName'))]",
		"backendSubnetRef": "[concat(variables('vnetId'),'/subnets/',parameters ('backendSubnetName'))]",

		"numberOfInstances": 2,
		"networkInterfaceName": "[concat('nic-')]",
		"virtualMachineName": "[concat('vm-')]",
	},
	"resources": [
		{ // availability set
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[parameters('avSetName')]",
			"location": "[resourceGroup().location]"
		},
		{ // outbound loadBalancer
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/loadBalancers",
			"name": "[parameters('loadBalancerName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "LoadBalancerFrontend",
						"properties": {
							"subnet": {
								"id": "[variables('backendSubnetRef')]"
							},
							"privateIPAllocationMethod": "Dynamic"
						},
					}
				],
				"backendAddressPools": [
					{
						"name": "BackendPool1"
					}
				],
				"loadBalancingRules": [
					{
						"properties": {
							"frontendIPConfiguration": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
							},
							"backendAddressPool": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
							},
							"probe": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/lbprobe')]"
							},
							"protocol": "Tcp",
							"frontendPort": 80,
							"backendPort": 80,
							"idleTimeoutInMinutes": 15
						},
						"Name": "lbrule"
					}
				],
				"probes": [
					{
						"properties": {
							"protocol": "Tcp",
							"port": 80,
							"intervalInSeconds": 15,
							"numberOfProbes": 2
						},
						"name": "lbprobe"
					}
				]
			}
		},

		{ // network interface[]
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('networkInterfaceName'), copyindex())]",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "nicLoop",
				"count": "[variables('numberOfInstances')]"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('backendSubnetRef')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id": "[concat(variables('outboundLBId'), '/backendAddressPools/BackendPool1')]"
								}
							]
						}
					}
				]
			}
		},

		{ // virtualMachines[]
			"apiVersion": "2015-06-15",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(parameters('virtualMachineName'), copyindex())]",
			"copy": {
				"name": "virtualMachineLoop",
				"count": "[variables('numberOfInstances')]"
			},
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'), copyindex())]",
				"[concat('Microsoft.Compute/availabilitySets/', variables('avSetName'))]"
			],
			"properties": {
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets',variables('avSetName'))]"
				},
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computerName": "[concat(parameters('virtualMachineName'), copyIndex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('imagePublisher')]",
						"offer": "[parameters('imageOffer')]",
						"sku": "[parameters('imageSKU')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('storageName'),'.blob.core.windows.net/vhds/','osdisk', copyindex(), '.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('networkInterfaceName'),copyindex()))]"
						}
					]
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": "true",
						"storageUri": "[concat('http://',parameters('storageName'),'.blob.core.windows.net')]"
					}
				}
			}
		},
	],
	"outputs": {}
}
// {	// virtualMachines/extensions[]
// 	"name": "[concat(parameters('vmNamePrefix'), substring(uniqueString(resourceGroup().id), 0, 4), '-', copyindex(), '/installcustomscript')]",
// 	"type": "Microsoft.Compute/virtualMachines/extensions",
// 	"copy": {
// 		"name": "apacheLoop",
// 		"count": "[variables('numberOfInstances')]"
// 	},
// 	"location": "[resourceGroup().location]",
// 	"apiVersion": "2015-06-15",
// 	"dependsOn": ["virtualMachineLoop"],
// 	"tags": {
// 		"displayName": "scriptextensiondemo"
// 	},
// 	"properties": {
// 		"publisher": "Microsoft.Azure.Extensions",
// 		"type": "CustomScript",
// 		"typeHandlerVersion": "2.0",
// 		"autoUpgradeMinorVersion": true,
// 		"settings": {
// 			"commandToExecute": "apt-get -y update && apt-get install -y apache2"
// 			}
// 		}
// 	}
// 